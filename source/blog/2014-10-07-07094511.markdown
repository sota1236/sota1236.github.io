---
layout: post
title: ! '* OS X 10.9をクリーンインストールした後に行ったこと'
published: true
date: 2014-10-07 09:45
comments: true
categories:
- 日常
tags: []
keywords:
- 日常
---
OS X 10.8から10.9にアップデートしたのだが、zshの一部の機能がエラーを吐いたり、brew doctorがいつまでたってもバグ吐いたりgemコマンドが使えなかったりとRuby周りがカオスだったりでめんどくさかったのでMavericksをクリーンインストールした。

その後に行ったことを自分用にメモ

1.アプリをインストール

愛用してた以下のアプリケーションをインストール


- 開発系


- Google Chrome(常用、Googleアカウント様々)
- Fire Fox (開発用)
- Mou(Markdownエディタ)
- Sublime Text 2(言わずと知れたエディタ)
- iTerm2(軽量シェル)
- Wireshark(パケットキャプチャ等)
- Dash(ドキュメントリーダー)
- Xcode(ユーザではないがCommand line toolsが欲しい for Homebrew)

- 日々充実系


- Alfred(Mac生活)
- Pocket(記事購読用)
- VLC(動画再生ソフト)
- Gyazo(スクショ用)
- Wake up time(目覚まし、寝坊するので・・・)
- AppCleaner

- コミュニケーション系


- Slack(ゼミのチャット用)
- 夜フクロウ(Twitter)

- 音楽系


- CocoaPiano(ピッチ違うけどまぁ参考程度に)
- MuseScore (無料楽譜作成ソフト)




- CUI環境を整備


ここはかなり丁寧にやった(気がする)


- bashの脆弱性、Shellshock対策


テストコマンドを打ったところ、脆弱性があったので改善する(最新のイメージが修正されてないんか・・・)。

以下のWebサイトで修正バッチをダウンロード、実行しておk

http://support.apple.com/kb/DL1769


- Colore Scheme


ちまたではSolarizedが流行ってるみたいだけど僕はSmyckを入れます

http://color.smyck.org/


- Homebrewを入れる


言わずと知れたパッケージマネージャ。

これなきゃ生きていけない

http://brew.sh/

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)”</pre>

んで、思いつく限りの使ってたコマンドを入れた

wget
zsh
git
gist
youtube-dl
nicovideo-dl
sl
vim

`brew doctor`するとエラーが出る

既存のモジュールが優先されるからインストールしたやつ使えねーよ！って感じらしいのでzsh入れた後にパスを追加する

さぁ、ここからいろいろと整えていきたい


- zsh


ゼミの先輩のタレを分けていただくか、自分で書くかという選択肢もあったが今後ゆっくりやろうってことで無難にOh-my-zsh

[Oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh "Oh-my-zsh")

テーマは`wedisagree`にした

あと前回はオレオレaliasを大量に.zshrcに書き込んでいたが、oh-my-zsh周りをいじるのはちょっとアレだなと思ったので外部ファイルにして、.zshrcで呼び出すことにした。

[blog.paz-para.com:シェルスクリプトで外部ファイルを読み込む](http://blog.paz-para.com/?p=1881 "blog.paz-para.com:シェルスクリプトで外部ファイルを読み込む")


- ssh


VPSとかGitHubのためにssh周りの設定

案の定忘れてたのでggりながら…

クリーンインストールする前、GitHubだけつながらなくなってたのでそれだけ設定

[Qiita:ターミナルからgithubのリポジトリにアクセスする設定(sshの設定)](http://qiita.com/pakiln/items/bd89ef5cc148a5349964 "Qiita:ターミナルからgithubのリポジトリにアクセスする設定(sshの設定)")

ほかのはバックアップからコピーでおk


- Vim


emacsを触ったことがないので戦争はしないけどVimずっと触ってたのでVim好きです

このままだとしごくコードが書きづらいので適当にvimrcを探す

リポジトリ検索をしてよさげなやつを導入

[GitHub:amix/vimrc](https://github.com/amix/vimrc "GitHub:amix/vimrc")


- Git


ホームディレクトリに.gitconfigを作成

以下を参考にした

[ゆるよろ日記:.gitconfigに設定してるaliasなどのまとめ](http://yuroyoro.hatenablog.com/entry/20101008/1286531851 "ゆるよろ日記:.gitconfigに設定してるaliasなどのまとめ")
[GitHub:geta6/dotfiles](https://github.com/geta6/dotfiles "GitHub:geta6/dotfiles")


- Node.js


前回はbrewで入れてたけど、今回はバージョン管理できるnvmを使ってみる

[GitHub:creationix/nvm](https://github.com/creationix/nvm "GitHub:creationix/nvm")

ちょっと調べた感じ不具合はなさそうなので、問題なければこれで管理していくかなー

とりあえず以下のコマンドを実行

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">git clone https://github.com/creationix/nvm.git ~/.nvm &amp;&amp; cd ~/.nvm &amp;&amp; git checkout `git describe --abbrev=0 --tags`</pre>

そして.zshrcに以下を追加

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">source ~/.nvm/nvm.sh</pre>

`nvm ls-remote`でダウンロードできるバージョンを指定できるので、とりあえず安定版v0.10.32をダウンロード

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">nvm install v0.10.32</pre>

そして普段使うものもこのバージョンに指定

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">nvm alias default v0.10.32</pre>

うん、快適

以下を参考にしました

[もろず blog:nvm を利用したnode.js のインストール](http://moro-archive.hatenablog.com/entry/2014/03/01/213314 "もろず blog:nvm を利用したnode.js のインストール")


- Ruby


問題のRuby

前回と同じくrbenvを使います

brewを使ってrbenv, ruby-buildを入れる

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">brew install rbenv ruby-builde</pre>

後にrbenvを使ってrubyをインストール

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">rbenv install 2.1.2
rbenv global 2.1.2
rbenv rehash</pre>

これでおk

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">ruby -v
ruby 2.0.0p481 (2014-05-08 revision 45883) [universal.x86_64-darwin13]
</pre>


- Python


とくにPythonを使って大層なプログラムを書くこともなかったのでbrewに甘んじてたのだが、せっかくなのでバージョン管理する

どうやら`pyenv`というものがあるらしい

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">brew install pyenv</pre>

して.zshrcに以下を追記する

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">eval &quot;$(pyenv init -)&quot;</pre>

あとはインストールしたいやつをインストール！

<pre class="brush: shell; gutter: true; first-line: 1; highlight: []; html-script: false">pyenv install 3.4.1
pyenv install 2.7.8
pyenv global 3.4.1</pre>

以下を参考にさせていただきました

[pixyzehn blog:MavericksでPythonのバージョン管理pyenvの設定をしてシステムではなくpyenvのPythonを使う](http://rikei-webmemo.hateblo.jp/entry/2014/06/21/102331 "pixyzehn blog:MavericksでPythonのバージョン管理pyenvの設定をしてシステムではなくpyenvのPythonを使う")

めでたく動きましたとさ！

とりあえず今回はこれでおしまい。

---
※この記事は WordPress に投稿した記事を変換したものです。一部不自然な表示があるかも知れません。ご了承ください。また、記事タイトル先頭の * は WordPress から移行した記事である印です。
