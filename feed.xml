<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sota1235.com</title>
  <subtitle>Database of @sota1235</subtitle>
  <id>http://sota1235.com/blog</id>
  <link href="http://sota1235.com/blog"/>
  <link href="http://sota1235.com/feed.xml" rel="self"/>
  <updated>2015-05-03T18:20:00+09:00</updated>
  <author>
    <name>@sota1235</name>
  </author>
  <entry>
    <title>Vagrantfileにchefバージョン指定した時に出たエラー直した</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/05/03/fix_vagrant_error.html"/>
    <id>http://sota1235.com/blog/2015/05/03/fix_vagrant_error.html</id>
    <published>2015-05-03T18:20:00+09:00</published>
    <updated>2015-05-03T18:31:27+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;細々とVagrantいじってる過程でchefとやらを入れてみようと思って、&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vagrant-omnibus&lt;/code&gt;をインストールした後、Vagrantfileに以下のように追記した。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant plugin install vagrant-omnibus
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Vagrantfile&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;config.omnibus.chef_version = :latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そしたら以下のようなエラーを吐いた。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Bringing machine &lt;span class="s1"&gt;'default'&lt;/span&gt; up with &lt;span class="s1"&gt;'virtualbox'&lt;/span&gt; provider...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Clearing any previously &lt;span class="nb"&gt;set &lt;/span&gt;forwarded ports...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Clearing any previously &lt;span class="nb"&gt;set &lt;/span&gt;network interfaces...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Forwarding ports...
    default: 22 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; 2222 &lt;span class="o"&gt;(&lt;/span&gt;adapter 1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Booting VM...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection timeout. Retrying...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Machine booted and ready!
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Checking &lt;span class="k"&gt;for &lt;/span&gt;guest additions &lt;span class="k"&gt;in &lt;/span&gt;VM...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Configuring and enabling network interfaces...
&lt;span class="gp"&gt;==&amp;gt; &lt;/span&gt;default: Mounting shared folders...
    default: /vagrant &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /Users/sota1235/Documents/sota1235/vagrant_space/centos7
Failed to mount folders &lt;span class="k"&gt;in &lt;/span&gt;Linux guest. This is usually because
the &lt;span class="s2"&gt;"vboxsf"&lt;/span&gt; file system is not available. Please verify that
the guest additions are properly installed &lt;span class="k"&gt;in &lt;/span&gt;the guest and
can work properly. The &lt;span class="nb"&gt;command &lt;/span&gt;attempted was:

mount -t vboxsf -o &lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id -u vagrant&lt;span class="sb"&gt;`&lt;/span&gt;,gid&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;getent group vagrant | cut -d: -f3&lt;span class="sb"&gt;`&lt;/span&gt; vagrant /vagrant
mount -t vboxsf -o &lt;span class="nv"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id -u vagrant&lt;span class="sb"&gt;`&lt;/span&gt;,gid&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id -g vagrant&lt;span class="sb"&gt;`&lt;/span&gt; vagrant /vagrant

The error output from the last &lt;span class="nb"&gt;command &lt;/span&gt;was:

/sbin/mount.vboxsf: mounting failed with the error: No such device
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;追記する前はなんの問題もなく起動できてたのに、いきなりエラー吐いて意味ぷーさん。&lt;/p&gt;

&lt;p&gt;んで、いろいろggってたら、以下のページの３番目の手法で解決できた。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://techblog.clara.jp/2015/01/vagrant-3-centos7-virtual-machine/"&gt;Vagrant (3) 続・CentOS7 の仮想マシンを作る&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以下解決策。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vagrant-vbguestをインストール&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これだけ。なので、&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant plugin install vagrant-vbguest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;して&lt;code&gt;vagrant up&lt;/code&gt;して解決。ちゃんちゃん。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>SlackにHubot Integrationを追加してから開発環境を整えるまで</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/04/29/slack_hubot.html"/>
    <id>http://sota1235.com/blog/2015/04/29/slack_hubot.html</id>
    <published>2015-04-29T17:11:00+09:00</published>
    <updated>2015-04-29T18:25:21+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;入社してからぼちぼち楽しい日々を送っているのですが、&lt;/p&gt;

&lt;p&gt;研修中はコードが書けないのでフラストレーション溜まって、同期で使ってるSlackのHubot開発で残業した&lt;/p&gt;

&lt;p&gt;ということでこの記事では&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「SlackにHubotを追加し、実際に運用するまで」&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;をまとめます。&lt;/p&gt;

&lt;p&gt;そのために以下の環境を予め整えてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Slack Teamの作成&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js( &amp;gt;= 0.10 )のインストール&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GitHubの登録&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Herokuの登録&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Travis CIの登録&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Heroku Toolbeltのインストール&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体的には以下の順で説明していきます&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SlackにHubot Integrationを追加&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Slack Hubotリポジトリを作成&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Herokuにデプロイ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;実際にいくつかHubotプラグインを入れる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自分でオリジナルのHubotプラグインを入れる&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;やっていきましょう。&lt;/p&gt;

&lt;h1 id="1-slackにhubot-integrationを追加"&gt;1 SlackにHubot Integrationを追加&lt;/h1&gt;

&lt;p&gt;Slackを開いて、左上のチーム名をクリックします。&lt;/p&gt;

&lt;p&gt;すると&amp;ldquo;Team Settings&amp;quot;というのがあるので、それを開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.gyazo.com/af296c68f98fb2244146f1d500c38caf.png" /&gt;&lt;/p&gt;

&lt;p&gt;するとこんなかんじでページが開かれるので、左上の&amp;quot;Menu&amp;quot;から&amp;quot;Integrations&amp;quot;をクリック。&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.gyazo.com/c546e0441d4aee84ed4c1311fe78aa86.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.gyazo.com/54dd75b6061940d86235accf76225471.png" /&gt;&lt;/p&gt;

&lt;p&gt;するとIntegration一覧が出るので、Hubotを探して&amp;quot;Add&amp;quot;してください。&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.gyazo.com/6a3d92ed1d16b276f4df842efeae7e17.png" /&gt;&lt;/p&gt;

&lt;p&gt;あとは指示に従ってUser名やアイコン等をお好みで変えて完了です。&lt;/p&gt;

&lt;p&gt;これであなたのSlack TeamにHubotアカウントが追加されました。&lt;/p&gt;

&lt;p&gt;しかし、このままではHubotは抜け殻のままなので、中身を実装していきます。&lt;/p&gt;

&lt;p&gt;※ &lt;code&gt;HUBOT_SLACK_TOKEN&lt;/code&gt;は後ほど使います。画面は開いたままで！&lt;/p&gt;

&lt;h1 id="2-slack-hubotリポジトリを作成"&gt;2 Slack Hubotリポジトリを作成&lt;/h1&gt;

&lt;p&gt;手順１で作ったHubotアカウントの中身を作りましょう。&lt;/p&gt;

&lt;p&gt;今回はGitHub上で開発する前提で話を進めていきます。&lt;/p&gt;

&lt;p&gt;まずは必要なnpmをインストール。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;npm i -g hubot coffee-script generator-hubot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次に適当な場所でHubot用のディレクトリを作成し、botoを作成します。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;mkdir &lt;span class="o"&gt;[&lt;/span&gt;hubot_name]
&lt;span class="gp"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;hubot_name]
&lt;span class="gp"&gt;$ &lt;/span&gt;yo hubot

? &lt;span class="o"&gt;==========================================================================&lt;/span&gt;
We&lt;span class="s1"&gt;'re constantly looking for ways to make yo better!
May we anonymously report usage statistics to improve the tool over time?
More info: https://github.com/yeoman/insight &amp;amp; http://yeoman.io
========================================================================== Yes
                     _____________________________
                    /                             \
   //\              |      Extracting input for    |
  ////\    _____    |   self-replication process   |
 //////\  /_____\   \                             /
 ======= |[^_/\_]|   /----------------------------
  |   | _|___@@__|__
  +===+/  ///     \_\
   | |_\ /// HUBOT/\\
   |___/\//      /  \\
         \      /   +---+
          \____/    |   |
           | //|    +===+
            \//      |xx|

? Owner: sota1235 &amp;lt;sota1235@gmail.com&amp;gt;
? Bot name: test2
? Description: A simple helpful robot for your Company
? Bot adapter: (campfire) slack
? Bot adapter: slack

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでディレクトリにHubotのひな形ができました。&lt;/p&gt;

&lt;p&gt;これをgitリポジトリ化して次の手順に進みます。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;git init

&lt;span class="gp"&gt;$ &lt;/span&gt;git add .

&lt;span class="gp"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;"initial commit"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="3-herokuにデプロイ"&gt;3 Herokuにデプロイ&lt;/h1&gt;

&lt;p&gt;これで実際に中身ができたので、Herokuにデプロイします。&lt;/p&gt;

&lt;p&gt;HerokuはPaaSサービスの一種です。詳しくはこちらの記事を参照ください。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://developers.mobage.jp/blog/how-to-use-for-beginners-heroku"&gt;初心者でも15分で公開できるHerokuのはじめかた&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Herokuへのデプロイは&lt;a href="https://toolbelt.heroku.com/"&gt;heroku-toolbelt&lt;/a&gt;を使用します。&lt;/p&gt;

&lt;p&gt;先ほどHubotを作成したフォルダに移動してください。&lt;/p&gt;

&lt;p&gt;まずheorkuにログイン、アプリケーションの作成を行います。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;heroku login
Enter your Heroku credentials.
Email: your@mail.address
Password &lt;span class="o"&gt;(&lt;/span&gt;typing will be hidden&lt;span class="o"&gt;)&lt;/span&gt;:
Authentication successful.

&lt;span class="gp"&gt;$ &lt;/span&gt;heroku create &lt;span class="o"&gt;[&lt;/span&gt;hubot_name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでGitリポジトリのリモートリポジトリにHerokuが追加されました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git remote -v&lt;/code&gt;して確認してみてください。&lt;/p&gt;

&lt;p&gt;次に、Hubotに必要な&lt;code&gt;Redis&lt;/code&gt;のアドオンをHerokuに追加します。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;heroku addons:add redistogo:nano
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完了したら、いくつかの環境変数をHerokuへ送信します。&lt;/p&gt;

&lt;p&gt;コマンドは&lt;code&gt;heroku config:set key1=val1&lt;/code&gt;を使用します。&lt;/p&gt;

&lt;p&gt;1番の手順で出てきた&lt;code&gt;HUBOT_SLACK_TOKEN&lt;/code&gt;を使用します。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;heroku config:set &lt;span class="nv"&gt;HUBOT_SLACK_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;先ほどのTOKEN]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次に&lt;code&gt;HUBOT_HEROKU_KEEPALIVE_URL&lt;/code&gt;をセットする。&lt;/p&gt;

&lt;p&gt;値は以下のコマンドの結果の&lt;code&gt;web_url&lt;/code&gt;に書いてあるものを設定する。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;heroku apps:info

&lt;span class="o"&gt;===&lt;/span&gt; slack-hubot-fresh15
Addons:        redistogo:nano
Dynos:         1
Git URL:       https://git.heroku.com/yourapp.git
Owner Email:   your@email.jp
Region:        us
Repo Size:     19k
Slug Size:     19M
Stack:         cedar-14
Web URL:       &lt;span class="o"&gt;[&lt;/span&gt;hubot app url]
Workers:       0

&lt;span class="gp"&gt;$ &lt;/span&gt;heroku config:set &lt;span class="nv"&gt;HUBOT_HEROKU_KEEPALIVE_URL&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;hubot app url]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでHerokuの設定は完了です。&lt;/p&gt;

&lt;p&gt;以下のコマンドでデプロイしてみましょう。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SlackでHubotにpingを送って返って来れば成功です！&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.gyazo.com/22940cd8f69a376467c2cace2de090ed.png" /&gt;&lt;/p&gt;

&lt;h1 id="4-実際にいくつかhubotプラグインを入れる"&gt;4 実際にいくつかHubotプラグインを入れる&lt;/h1&gt;

&lt;p&gt;まずはnpmで配布されてるhubotプラグインをいくつか入れてみます。&lt;/p&gt;

&lt;p&gt;今回はhubot-shubotとhubot-rss-readerを追加してみます。&lt;/p&gt;

&lt;p&gt;追加する手順としては、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;external-scripts.json&lt;/code&gt;を編集&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;を編集&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;するだけです。なんて簡単＼(^o^)／！&lt;/p&gt;

&lt;p&gt;&lt;code&gt;external-scripts.json&lt;/code&gt;&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="s2"&gt;"hubot-shubot"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"hubot-rss-reader"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;は、&lt;code&gt;dependencies&lt;/code&gt;の項に追加する&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"your hubot app"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sota1235 &amp;lt;sota1235@gmail.com&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"hubot"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.12.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-diagnostics"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-google-images"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-google-translate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-heroku-keepalive"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-maps"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-pugme"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-redis-brain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.5.16"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-shipit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-slack"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.3.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-youtube"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-shubot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hubot-rss-reader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"engines"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.10.x"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでデプロイするだけ！&lt;/p&gt;

&lt;p&gt;ただ、それぞれのプラグインで別途設定項目がある場合もあるので&lt;code&gt;README.md&lt;/code&gt;をしっかり読みましょう。&lt;/p&gt;

&lt;h1 id="5-自分でオリジナルのhubotプラグインを入れる"&gt;5 自分でオリジナルのHubotプラグインを入れる&lt;/h1&gt;

&lt;p&gt;プラグインとしてでなく、Hubotに機能を追加する場合は基本&lt;code&gt;scripts&lt;/code&gt;ディレクトリにファイルを追加します。&lt;/p&gt;

&lt;p&gt;ファイル名に特に規則はありませんが、１機能１ファイルで作成していきましょう。&lt;/p&gt;

&lt;p&gt;言語は&lt;code&gt;CoffeeScript&lt;/code&gt;です。&lt;/p&gt;

&lt;p&gt;弊社では新卒１年目に課される納会という名の試練があるので、納会の話が始まるとHubotが現実逃避をし始める機能を追加しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scripts/nokai.coffee&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Description:
#   心の叫びを具現化する
#
# Author:
#   @sota1235
&lt;/span&gt;
&lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="s"&gt;'lodash'&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;robot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;robot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hear&lt;/span&gt; &lt;span class="sr"&gt;/納会/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s"&gt;"納会なんてないっっっ！！！"&lt;/span&gt;
      &lt;span class="s"&gt;"納会なんてなかったんや…"&lt;/span&gt;
      &lt;span class="s"&gt;"納会？なにそれ美味しいの"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sample&lt;/span&gt; &lt;span class="nx"&gt;words&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで納会機能が追加されました。&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.gyazo.com/5809637868c1013d7efefe77020db28c.png" /&gt;&lt;/p&gt;

&lt;h1 id="まとめ"&gt;まとめ&lt;/h1&gt;

&lt;p&gt;Hubot最高&lt;/p&gt;

&lt;h1 id="参考"&gt;参考&lt;/h1&gt;

&lt;p&gt;&lt;a href="http://qiita.com/misopeso/items/1f418dd02e89234499b3"&gt;Qiita: Slack で Hubot を使えるようにする&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Pythonで二次元配列をsortする</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/04/23/python_sort_twodime.html"/>
    <id>http://sota1235.com/blog/2015/04/23/python_sort_twodime.html</id>
    <published>2015-04-23T23:03:00+09:00</published>
    <updated>2015-04-23T23:37:02+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;社会人になってからしばらくやっていなかった競技プログラミングを細々と再開してたりする。&lt;/p&gt;

&lt;p&gt;主に&lt;a href="http://judge.u-aizu.ac.jp/onlinejudge/"&gt;Aizu Online Judge&lt;/a&gt;と&lt;a href="http://atcoder.jp/"&gt;AtCoder&lt;/a&gt;をやってたりしてて、言語は全部Pythonでやってる&lt;/p&gt;

&lt;p&gt;理由はいくつかあって、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;書いてて楽しい&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;リスト周りの関数が強い&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;少なくとも自分がまともに使える言語の中では一番使いやすい&lt;/li&gt;
&lt;li&gt;リスト内包表記最高です(^q^)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キモいコード書いて悦に入れる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;print(sum(list(map(int, input().split()))))&lt;/code&gt;みたいな&lt;/li&gt;
&lt;li&gt;Zen of Pytonなんてなかった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;てな感じ。&lt;/p&gt;

&lt;p&gt;で、リハビリがてら簡単な問題をやっていて忘れてたことをメモ。&lt;/p&gt;

&lt;h2 id="二次元配列をsortする"&gt;二次元配列をsortする&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;環境&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python3.4.1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1次元配列のsortは&lt;code&gt;sort()&lt;/code&gt;もしくは&lt;code&gt;sorted()&lt;/code&gt;を素直に使えば良い。&lt;/p&gt;

&lt;p&gt;前者は配列が持つ関数で返り値が無し。&lt;/p&gt;

&lt;p&gt;後者は配列の内容は変わらないが返り値が来る。&lt;/p&gt;

&lt;p&gt;以下のとおり&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c"&gt;# [1, 2, 3]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="c"&gt;# [2, 3, 1]&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# [1, 2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まぁなんてことないですよね。&lt;/p&gt;

&lt;p&gt;じゃあ二次元配列をsortするとどうなるか。&lt;/p&gt;

&lt;p&gt;これは、要素の配列のどれをkeyとしてsortするのかで結果が変わってきます。&lt;/p&gt;

&lt;p&gt;まずは素直にsortする。&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c"&gt;# [ [1, 3, 4], [2, 3, 1], [3, 4, 4] ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;素直にsortすると各配列の先頭要素をkeyとしてsortします。&lt;/p&gt;

&lt;p&gt;では各配列の2番めの値をkeyとしたいときはどうすればよいか。&lt;/p&gt;

&lt;p&gt;方法としては&lt;code&gt;sorted()&lt;/code&gt;の引数に&lt;code&gt;key&lt;/code&gt;の値をしていします。&lt;/p&gt;

&lt;p&gt;そしてその方法として以下の２つがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;keyに関数を指定する&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;標準ライブラリである&lt;a href="http://docs.python.jp/3.4/library/operator.html"&gt;operator&lt;/a&gt;の&lt;code&gt;itemgetter&lt;/code&gt;を使用&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;順番に紹介します。&lt;/p&gt;

&lt;h3 id="keyに関数を指定する"&gt;keyに関数を指定する&lt;/h3&gt;

&lt;p&gt;例えば、以下の様な書き方をすると各要素の2番目の値をkeyとしてsortを行います.&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;prtint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c"&gt;# [ [1, 1, 4], [1, 2, 3], [4, 5, 2] ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでは無名関数を用いることによって各要素の2番目のインデックスをkeyとして指定しています。&lt;/p&gt;

&lt;p&gt;ここに&lt;code&gt;str.lower&lt;/code&gt;等を指定することで、小文字優先のsortにすることも可能だったりします&lt;/p&gt;

&lt;h3 id="operatorモジュールを使用する"&gt;operatorモジュールを使用する&lt;/h3&gt;

&lt;p&gt;上に書いたようなsortはしょっちゅうやるよね〜いちいち指定すんのだるいよね〜&lt;/p&gt;

&lt;p&gt;ってことでドキュメントでは&lt;code&gt;itemgetter()&lt;/code&gt;が推奨されています。&lt;/p&gt;

&lt;p&gt;こちらの方が高速にアクセスできるようなので何か特別な理由がなければこれを使うといいと想います(╹◡╹)&lt;/p&gt;

&lt;p&gt;以下の一行でまずはimport&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;operator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;itemgetter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そして使う&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;itemgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="c"&gt;# [ [1, 1, 4], [1, 2, 3], [4, 5, 2] ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ね、簡単でしょ？&lt;/p&gt;

&lt;p&gt;ってわけで引き続きこつこつ問題を解いていきたいと思います。&lt;/p&gt;

&lt;p&gt;以上。解散！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ブログ記事の画像を環境に合わせてリサイズ</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/04/19/fix_image_size.html"/>
    <id>http://sota1235.com/blog/2015/04/19/fix_image_size.html</id>
    <published>2015-04-19T15:00:00+09:00</published>
    <updated>2015-04-19T15:04:03+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;ブログの画像サイズがそのままのサイズで表示されているため、修正した&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1回めのチャレンジ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.post-description&lt;/span&gt;
  &lt;span class="nt"&gt;img&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだと大きすぎる画像はしっかり縮小されるが、小さい画像が環境によって不必要に拡大される&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2回めのチャレンジ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.post-description&lt;/span&gt;
  &lt;span class="nt"&gt;img&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうすることで、小さい画像はそのまま、大きい画像は画面幅に合わせてリサイズされる&lt;/p&gt;

&lt;p&gt;長らく改修してないブログなので今後も地味にイジイジしていきます&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GistのCSSがおかしいので修正する</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/04/19/fix_gist_css.html"/>
    <id>http://sota1235.com/blog/2015/04/19/fix_gist_css.html</id>
    <published>2015-04-19T14:24:00+09:00</published>
    <updated>2015-04-22T00:03:03+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;先日書いたブログ記事にGistを埋め込むと表示がおかしくなってる。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/general/0419gist.png" /&gt;&lt;/p&gt;

&lt;p&gt;ネタバレ防止みたいになってるので直す。&lt;/p&gt;

&lt;p&gt;Chromeのデベロッパーツールで見てみると、なぜか&lt;code&gt;span&lt;/code&gt;タグに囲まれていないコードだけblog由来のハイライト用スタイルシートがあたっている。&lt;/p&gt;

&lt;p&gt;ggってみるとCSSの優先順位は後から読み込まれたものが優先されるはずなのだが、原因が不明なので&lt;code&gt;.gist pre&lt;/code&gt;要素だけ新たにスタイルシートを追記して解決を試みる&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;※前提としてブログ構築環境はmiddleman-blog 3.5.3です&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;まず&lt;code&gt;_gist.sass&lt;/code&gt;を新たに作成し、&lt;code&gt;/data/stylesheets/&lt;/code&gt;にいれる&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;&lt;span class="nc"&gt;.gist&lt;/span&gt;
  &lt;span class="nt"&gt;pre&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#66757f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;これを&lt;code&gt;all.css.sass&lt;/code&gt;に読み込ませる&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s"&gt;"gist"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;middleman build &amp;amp; middleman deploy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;デプロイする前にローカルで確認してみる&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/general/0419gist2.png" /&gt;&lt;/p&gt;

&lt;p&gt;できた(╹◡╹)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>卒業式前夜に思うこと</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/03/22/graduation_diary.html"/>
    <id>http://sota1235.com/blog/2015/03/22/graduation_diary.html</id>
    <published>2015-03-22T23:02:00+09:00</published>
    <updated>2015-04-19T14:02:05+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;普段は技術ネタのメモとか覚え書きしか書かないのだけど、&lt;/p&gt;

&lt;p&gt;明日卒業式だし、&lt;/p&gt;

&lt;p&gt;とうとう社会に出ていくわけだし、&lt;/p&gt;

&lt;p&gt;その過程でお世話になった人は星の数ほどいるわけで。&lt;/p&gt;

&lt;p&gt;そんな人達への挨拶をなんかしらの形でしたいと思って卒業ポエムを書くことにしました。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;こういうのわざわざブログに書く人あまり見かけないのだけど、&lt;/p&gt;

&lt;p&gt;SNSのタイムラインに投稿しても俺に興味ない人もいるだろうし、&lt;/p&gt;

&lt;p&gt;そもそもFacebookとかで収まるような量に出来る自信がないし、&lt;/p&gt;

&lt;p&gt;ここでポエムを書けば&lt;/p&gt;

&lt;p&gt;恥ずかしいから読まれたくない
&lt;br /&gt;→ 記事を下げようとたくさん更新する
&lt;br /&gt;→ 技術者としてのレベルがあがる？？&lt;/p&gt;

&lt;p&gt;というとても安易な考えのもと、この私的ブログに書くことにしました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;とりあえず、卒業できます。&lt;/p&gt;

&lt;p&gt;そして4月からは某IT企業のWebエンジニアとして働きます&lt;/p&gt;

&lt;p&gt;もともと、ステージの演出に関する技術を学んでみたいという意味わからん理由でSFCの学部を選んで入ってきて&lt;/p&gt;

&lt;p&gt;デザインやってみたいなーと思って挫折し&lt;/p&gt;

&lt;p&gt;プログラミング楽しい(^q^)ってなった頃には3年生になっちゃってて、とかなり迷走しました&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;振り返ってみるとほんとぐだぐだでだるんだるんな大学生活を送っていて、全部7, 8割くらいの力で頑張ったって感じです&lt;/p&gt;

&lt;p&gt;たくさんのことを同時にできないみたいで、サークルも勉強もなかなか中途半端でした(バイトは結構頑張った)&lt;/p&gt;

&lt;p&gt;でも就活でめでたく希望通りの仕事ができそうなのと、&lt;/p&gt;

&lt;p&gt;K.O.E.でも最後の最後に少しだけ頑張れたので&lt;/p&gt;

&lt;p&gt;心残りは多少あれどもきちんと大学生活を全うできた気がします&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;4年生の途中からはいろいろと過ちを犯して本当に数えきれない人に迷惑をかけたりして、もうこれに関しては何も言えないのですが&lt;/p&gt;

&lt;p&gt;ご迷惑をおかけしてごめんなさい&lt;/p&gt;

&lt;p&gt;そしてこんな僕で友達で居てくれた方、本当にありがとうございます&lt;/p&gt;

&lt;p&gt;何が正しいのかわからないけどとりあえず友達の偉大さを最後の最後に実感出来た気がしています&lt;/p&gt;

&lt;p&gt;これからは清く正しく生きていきます&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;すごく簡単にですが感謝の気持ちを箇条書きにしていくつかの方々に書きました&lt;/p&gt;

&lt;p&gt;正直お礼を言いたい方は多すぎて、K.O.E.の1バンド、一人ひとりとかCNSコン同期とかバイト先の先輩とかもう全部書きたいんですが&lt;/p&gt;

&lt;p&gt;誰得な気がするので簡潔にしました。文章書くの苦手だし&lt;/p&gt;

&lt;p&gt;てことでここに書いてなかったらごめんなさい、でも感謝しています&lt;/p&gt;

&lt;p&gt;社会人になっても飲みましょう&lt;/p&gt;

&lt;p&gt;僕は土日空いてます(´ω｀)&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id="バイト先で関わった全ての人達"&gt;バイト先で関わった全ての人達&lt;/h3&gt;

&lt;p&gt;いろいろ話すと長いのですがお金がめっちゃ必要で、4年間ですごくたくさんのアルバイトをしてました&lt;/p&gt;

&lt;p&gt;バイトばっかりで自分の時間が取れなかったり、サークルに行けなかったり、生活がだらしなくなってしまった時に&lt;/p&gt;

&lt;p&gt;たまに「あの人はバイトしてなくていいなぁ」とかそういうよくない気持ちが湧いてきたりして死ぬほど全バイトをやめたい、けど絶対にやめられないみたいな状況にストレスを感じてしまうことが多々あったのですが&lt;/p&gt;

&lt;p&gt;振り返ってみるとバイトで過ごした時間は自分の身になっているのかなと思えるし全然後悔はしていません&lt;/p&gt;

&lt;p&gt;そりゃ遊んでた方が楽しいけど、&lt;/p&gt;

&lt;p&gt;中学生に勉強を教える経験とか、車を洗うとか、ライブスタッフとしてお客さんを対応するとか&lt;/p&gt;

&lt;p&gt;パソコンの使い方をわかるように教えるとか、料理を運ぶとか、ドーナツを子供に売るとか&lt;/p&gt;

&lt;p&gt;本をきちんと作るとか、鉄骨を運ぶとか、携帯を売りつけるとか&lt;/p&gt;

&lt;p&gt;そういう経験はバイトしてなきゃでできなかったろうし、すごく満足してます&lt;/p&gt;

&lt;p&gt;それに普通に生活してたら会えないような人たちにたくさん会えたのもとても楽しかった&lt;/p&gt;

&lt;p&gt;ありがとうございました&lt;/p&gt;

&lt;h3 id="koeの人たち"&gt;KOEの人たち&lt;/h3&gt;

&lt;p&gt;最初、サークルなんて適当にやるつもりだったし「うぇーい」みたいなノリほんと辛いしな感じで&lt;/p&gt;

&lt;p&gt;案の定入ってからも子供みたいに駄々こねていろんな人に迷惑かけたり、集団行動から外れてみたりと、絵に描いた不良サークル員だったのですが&lt;/p&gt;

&lt;p&gt;結局4年間ずっといました&lt;/p&gt;

&lt;p&gt;その理由はなんだろうなぁーって考えてみると、まぁまず第一に歌うのが好きってのが来るのですが&lt;/p&gt;

&lt;p&gt;しんどい時とか悩んでる時にサークルで歌ったり、メディア前で人とあってちょこっと話たりするだけで結構気が晴れたりしていたんですよね&lt;/p&gt;

&lt;p&gt;付かず離れずでずっと過ごしてきましたがなんだかんだで人が好きでずっと過ごしてたんじゃないかなって結論です&lt;/p&gt;

&lt;p&gt;苦労も喜びも成功も失敗も一通り舐めたサークルだからこそ本当に思い入れが深くなってました。気づいたら&lt;/p&gt;

&lt;p&gt;KOEで関わった先輩や後輩、そして11のみんなへ、本当にこんなゴミクズ野郎を最後まで居させてくれてありがとうございます&lt;/p&gt;

&lt;p&gt;特に11PA班、常山とあいらにはいっぱい迷惑かけたし、たくさん助けてもらいました。ありがとう&lt;/p&gt;

&lt;p&gt;そしてこれからもよろしくお願いします&lt;/p&gt;

&lt;h3 id="増井研の方々"&gt;増井研の方々&lt;/h3&gt;

&lt;p&gt;3年秋という中途半端なタイミングでミジンコみたいなコーディングレベルで入ったのにかわいがってくれて本当にありがとうございました&lt;/p&gt;

&lt;p&gt;自分の存在が無に思えるほど技術のある人達の多い研究室でしたが、その分多くの学びがありました&lt;/p&gt;

&lt;p&gt;飯を食うよりプログラミングな空気が最高に心地よかったです&lt;/p&gt;

&lt;p&gt;自分の技術力と、勉強に裂ける時間が少ない環境に甘んじて全然アウトプットができなかったのと増井先生からもっと学べばよかったという後悔はありますが、本当に楽しかったです&lt;/p&gt;

&lt;p&gt;合宿とか飲みとか、いろいろ予定かぶっていけなくてほんとつらいんで卒業して日にちあったら絶対行きますんで呼んでください(というよりSlackでキャッチアップします)&lt;/p&gt;

&lt;p&gt;頑張って綺麗なPHPerになってORFにでもお邪魔します&lt;/p&gt;

&lt;h3 id="cnsコンサルタントの人たち"&gt;CNSコンサルタントの人たち&lt;/h3&gt;

&lt;p&gt;一応これは「バイト先で〜」のところと被ってるんですが、&lt;/p&gt;

&lt;p&gt;CNSコンの人たちには、特にお世話になりました。&lt;/p&gt;

&lt;p&gt;すごくすごくたくさん働いて長い時間を過ごしていたり、今までやってたバイトで一番長い期間勤めてたこともあってとても思い入れが深いです。&lt;/p&gt;

&lt;p&gt;特にITCの方々&lt;/p&gt;

&lt;p&gt;その中でも浅見さん、関本さん、山方さん、寺岡さん、中島さんにはお世話になりました(他にもお世話になった方いっぱいなのですが名前を覚えてる方々だけ書きました)&lt;/p&gt;

&lt;p&gt;学生であまあまだった僕たちに本当に優しく、時に厳しく指導していただいて本当にありがとうございました&lt;/p&gt;

&lt;p&gt;大学内という性質もあると思うのですが、ここまで優しく厳しい職場は他になかったです&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;また、先輩や後輩、同期にもとてもとてもお世話になりました&lt;/p&gt;

&lt;p&gt;大学で友達が少ない僕と仲良くしてくれて本当にありがとうございます&lt;/p&gt;

&lt;p&gt;サークルの友達でさえ、遊びに行くとか飲みに行くとかは４年生になるまでほとんどなかったのですが&lt;/p&gt;

&lt;p&gt;CNSコンの人とは過ごしてた時間が長い気がします(勤務時間が長いからってのもあるけど)&lt;/p&gt;

&lt;p&gt;また、ここほど後輩と絡みがあった場所もあまりなかった気がします&lt;/p&gt;

&lt;p&gt;同期に関して言えば、まさかの７人が職場近いのでほんと毎週飲もうって勝手に思ってます&lt;/p&gt;

&lt;p&gt;これからも仲良くしてください！&lt;/p&gt;

&lt;h3 id="やぎはしゅ"&gt;やぎはしゅ&lt;/h3&gt;

&lt;p&gt;スーパーイケメンハッカーウルトラエンジニアになる予定の彼には本当に本当にお世話になりました。&lt;/p&gt;

&lt;p&gt;彼をわざわざ個人名にあげたのは理由があって、&lt;/p&gt;

&lt;p&gt;僕がエンジニアとしてやっていこうと思うまでの道のりのスタートは彼が提示してくれた道だからです&lt;/p&gt;

&lt;p&gt;&lt;s&gt;提示というより強制といったほうが合ってる気もしますが…&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;また、きっかけだけでなく彼がガンガン僕をその道に引きずり込んでなければ僕が川に沈む生ごみレベルの技術者からミジンコレベルの技術者へと華麗なる変貌を遂げることもなかったでしょう&lt;/p&gt;

&lt;p&gt;彼にイジメられた日々はこの先の人生の中でもとても大事なものになると思います&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;また、それだけでなく彼にはプライベートでもバイトでもたくさん助けて頂きました。&lt;/p&gt;

&lt;p&gt;一見、セキュリティキチガイであり煽り狂であったりとする彼ですが人間的に本当にできていて、たくさん助けて頂きました。ありがとう&lt;/p&gt;

&lt;p&gt;結局、彼が専門とするセキュリティではなくWebエンジニアとして生きていくことになりそうですが、これからも彼の知識と&lt;strong&gt;給料に&lt;/strong&gt;たかって生きていこうと思っています&lt;/p&gt;

&lt;p&gt;初任給飲みが楽しみです&lt;/p&gt;

&lt;h3 id="家族"&gt;家族&lt;/h3&gt;

&lt;p&gt;これに関しては大学生活でなく、この22年間ですね。&lt;/p&gt;

&lt;p&gt;正直、大学生になってからはほとんど会話をしてなくて、年に数回きちんと集まってご飯を食べるとき以外はあまり話せていないです&lt;/p&gt;

&lt;p&gt;次男とは就活やら大学やらで話をするのですが、毎日ってわけではないです&lt;/p&gt;

&lt;p&gt;それに、説明は省きますがいろいろごたごたしたり大変な時に家族に対して必要以上に苛立ちを感じたり言い争いになることも多かったような気もします&lt;/p&gt;

&lt;p&gt;それでも結局このタイミングにして思うのは、100％油断出来る相手は家族だけだろうしなんだかんだで22年間育ててもらって、&lt;/p&gt;

&lt;p&gt;ありがとうございます、というよりは巣立ちます、って感じの気持ちです&lt;/p&gt;

&lt;p&gt;きっと働いて仕事の大変さを感じたり、&lt;/p&gt;

&lt;p&gt;一人暮らしをいつかもし始めて家事をやってみたり、&lt;/p&gt;

&lt;p&gt;いつか家庭を持ったり、&lt;/p&gt;

&lt;p&gt;そんなときどきで家族への感謝を感じるでしょう&lt;/p&gt;

&lt;p&gt;ありがとうございました(一番お世話になった母はたぶんブログにたどりつけないですけどね)&lt;/p&gt;
</content>
  </entry>
</feed>
