<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>はらへり日記</title>
  <subtitle>@sota1235によるプログラミング片思い日記</subtitle>
  <id>http://sota1235.com/blog</id>
  <link href="http://sota1235.com/blog"/>
  <link href="http://sota1235.com/feed.xml" rel="self"/>
  <updated>2015-04-19T15:00:00+09:00</updated>
  <author>
    <name>@sota1235</name>
  </author>
  <entry>
    <title>ブログ記事の画像を環境に合わせてリサイズ</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/04/19/fix_image_size.html"/>
    <id>http://sota1235.com/blog/2015/04/19/fix_image_size.html</id>
    <published>2015-04-19T15:00:00+09:00</published>
    <updated>2015-04-19T15:04:03+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;ブログの画像サイズがそのままのサイズで表示されているため、修正した&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1回めのチャレンジ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.post-description&lt;/span&gt;
  &lt;span class="nt"&gt;img&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだと大きすぎる画像はしっかり縮小されるが、小さい画像が環境によって不必要に拡大される&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2回めのチャレンジ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.post-description&lt;/span&gt;
  &lt;span class="nt"&gt;img&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうすることで、小さい画像はそのまま、大きい画像は画面幅に合わせてリサイズされる&lt;/p&gt;

&lt;p&gt;長らく改修してないブログなので今後も地味にイジイジしていきます&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GistのCSSがおかしいので修正する</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/04/19/fix_gist_css.html"/>
    <id>http://sota1235.com/blog/2015/04/19/fix_gist_css.html</id>
    <published>2015-04-19T14:24:00+09:00</published>
    <updated>2015-04-19T15:00:26+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;先日書いたブログ記事にGistを埋め込むと表示がおかしくなってる。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/general/0419gist.png" /&gt;&lt;/p&gt;

&lt;p&gt;ネタバレ防止みたいになってるので直す。&lt;/p&gt;

&lt;p&gt;Chromeのデベロッパーツールで見てみると、なぜか&lt;code&gt;span&lt;/code&gt;タグに囲まれていないコードだけblog由来のハイライト用スタイルシートがあたっている。&lt;/p&gt;

&lt;p&gt;ggってみるとCSSの優先順位は後から読み込まれたものが優先されるはずなのだが、原因が不明なので&lt;code&gt;.gist pre&lt;/code&gt;要素だけ新たにスタイルシートを追記して解決を試みる&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;※前提としてブログ構築環境はmiddleman-blog 3.5.3です&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;まず&lt;code&gt;_gist.sass&lt;/code&gt;を新たに作成し、&lt;code&gt;/data/stylesheets/&lt;/code&gt;にいれる&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.gist&lt;/span&gt;
  &lt;span class="nt"&gt;pre&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#66757f&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;これを&lt;code&gt;all.css.sass&lt;/code&gt;に読み込ませる&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s"&gt;"gist"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;middleman build &amp;amp; middleman deploy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;デプロイする前にローカルで確認してみる&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/general/0419gist2.png" /&gt;&lt;/p&gt;

&lt;p&gt;できた(╹◡╹)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>卒業式前夜に思うこと</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/03/22/graduation_diary.html"/>
    <id>http://sota1235.com/blog/2015/03/22/graduation_diary.html</id>
    <published>2015-03-22T23:02:00+09:00</published>
    <updated>2015-04-19T14:02:05+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;普段は技術ネタのメモとか覚え書きしか書かないのだけど、&lt;/p&gt;

&lt;p&gt;明日卒業式だし、&lt;/p&gt;

&lt;p&gt;とうとう社会に出ていくわけだし、&lt;/p&gt;

&lt;p&gt;その過程でお世話になった人は星の数ほどいるわけで。&lt;/p&gt;

&lt;p&gt;そんな人達への挨拶をなんかしらの形でしたいと思って卒業ポエムを書くことにしました。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;こういうのわざわざブログに書く人あまり見かけないのだけど、&lt;/p&gt;

&lt;p&gt;SNSのタイムラインに投稿しても俺に興味ない人もいるだろうし、&lt;/p&gt;

&lt;p&gt;そもそもFacebookとかで収まるような量に出来る自信がないし、&lt;/p&gt;

&lt;p&gt;ここでポエムを書けば&lt;/p&gt;

&lt;p&gt;恥ずかしいから読まれたくない
&lt;br /&gt;→ 記事を下げようとたくさん更新する
&lt;br /&gt;→ 技術者としてのレベルがあがる？？&lt;/p&gt;

&lt;p&gt;というとても安易な考えのもと、この私的ブログに書くことにしました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;とりあえず、卒業できます。&lt;/p&gt;

&lt;p&gt;そして4月からは某IT企業のWebエンジニアとして働きます&lt;/p&gt;

&lt;p&gt;もともと、ステージの演出に関する技術を学んでみたいという意味わからん理由でSFCの学部を選んで入ってきて&lt;/p&gt;

&lt;p&gt;デザインやってみたいなーと思って挫折し&lt;/p&gt;

&lt;p&gt;プログラミング楽しい(^q^)ってなった頃には3年生になっちゃってて、とかなり迷走しました&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;振り返ってみるとほんとぐだぐだでだるんだるんな大学生活を送っていて、全部7, 8割くらいの力で頑張ったって感じです&lt;/p&gt;

&lt;p&gt;たくさんのことを同時にできないみたいで、サークルも勉強もなかなか中途半端でした(バイトは結構頑張った)&lt;/p&gt;

&lt;p&gt;でも就活でめでたく希望通りの仕事ができそうなのと、&lt;/p&gt;

&lt;p&gt;K.O.E.でも最後の最後に少しだけ頑張れたので&lt;/p&gt;

&lt;p&gt;心残りは多少あれどもきちんと大学生活を全うできた気がします&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;4年生の途中からはいろいろと過ちを犯して本当に数えきれない人に迷惑をかけたりして、もうこれに関しては何も言えないのですが&lt;/p&gt;

&lt;p&gt;ご迷惑をおかけしてごめんなさい&lt;/p&gt;

&lt;p&gt;そしてこんな僕で友達で居てくれた方、本当にありがとうございます&lt;/p&gt;

&lt;p&gt;何が正しいのかわからないけどとりあえず友達の偉大さを最後の最後に実感出来た気がしています&lt;/p&gt;

&lt;p&gt;これからは清く正しく生きていきます&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;すごく簡単にですが感謝の気持ちを箇条書きにしていくつかの方々に書きました&lt;/p&gt;

&lt;p&gt;正直お礼を言いたい方は多すぎて、K.O.E.の1バンド、一人ひとりとかCNSコン同期とかバイト先の先輩とかもう全部書きたいんですが&lt;/p&gt;

&lt;p&gt;誰得な気がするので簡潔にしました。文章書くの苦手だし&lt;/p&gt;

&lt;p&gt;てことでここに書いてなかったらごめんなさい、でも感謝しています&lt;/p&gt;

&lt;p&gt;社会人になっても飲みましょう&lt;/p&gt;

&lt;p&gt;僕は土日空いてます(´ω｀)&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id="バイト先で関わった全ての人達"&gt;バイト先で関わった全ての人達&lt;/h3&gt;

&lt;p&gt;いろいろ話すと長いのですがお金がめっちゃ必要で、4年間ですごくたくさんのアルバイトをしてました&lt;/p&gt;

&lt;p&gt;バイトばっかりで自分の時間が取れなかったり、サークルに行けなかったり、生活がだらしなくなってしまった時に&lt;/p&gt;

&lt;p&gt;たまに「あの人はバイトしてなくていいなぁ」とかそういうよくない気持ちが湧いてきたりして死ぬほど全バイトをやめたい、けど絶対にやめられないみたいな状況にストレスを感じてしまうことが多々あったのですが&lt;/p&gt;

&lt;p&gt;振り返ってみるとバイトで過ごした時間は自分の身になっているのかなと思えるし全然後悔はしていません&lt;/p&gt;

&lt;p&gt;そりゃ遊んでた方が楽しいけど、&lt;/p&gt;

&lt;p&gt;中学生に勉強を教える経験とか、車を洗うとか、ライブスタッフとしてお客さんを対応するとか&lt;/p&gt;

&lt;p&gt;パソコンの使い方をわかるように教えるとか、料理を運ぶとか、ドーナツを子供に売るとか&lt;/p&gt;

&lt;p&gt;本をきちんと作るとか、鉄骨を運ぶとか、携帯を売りつけるとか&lt;/p&gt;

&lt;p&gt;そういう経験はバイトしてなきゃでできなかったろうし、すごく満足してます&lt;/p&gt;

&lt;p&gt;それに普通に生活してたら会えないような人たちにたくさん会えたのもとても楽しかった&lt;/p&gt;

&lt;p&gt;ありがとうございました&lt;/p&gt;

&lt;h3 id="koeの人たち"&gt;KOEの人たち&lt;/h3&gt;

&lt;p&gt;最初、サークルなんて適当にやるつもりだったし「うぇーい」みたいなノリほんと辛いしな感じで&lt;/p&gt;

&lt;p&gt;案の定入ってからも子供みたいに駄々こねていろんな人に迷惑かけたり、集団行動から外れてみたりと、絵に描いた不良サークル員だったのですが&lt;/p&gt;

&lt;p&gt;結局4年間ずっといました&lt;/p&gt;

&lt;p&gt;その理由はなんだろうなぁーって考えてみると、まぁまず第一に歌うのが好きってのが来るのですが&lt;/p&gt;

&lt;p&gt;しんどい時とか悩んでる時にサークルで歌ったり、メディア前で人とあってちょこっと話たりするだけで結構気が晴れたりしていたんですよね&lt;/p&gt;

&lt;p&gt;付かず離れずでずっと過ごしてきましたがなんだかんだで人が好きでずっと過ごしてたんじゃないかなって結論です&lt;/p&gt;

&lt;p&gt;苦労も喜びも成功も失敗も一通り舐めたサークルだからこそ本当に思い入れが深くなってました。気づいたら&lt;/p&gt;

&lt;p&gt;KOEで関わった先輩や後輩、そして11のみんなへ、本当にこんなゴミクズ野郎を最後まで居させてくれてありがとうございます&lt;/p&gt;

&lt;p&gt;特に11PA班、常山とあいらにはいっぱい迷惑かけたし、たくさん助けてもらいました。ありがとう&lt;/p&gt;

&lt;p&gt;そしてこれからもよろしくお願いします&lt;/p&gt;

&lt;h3 id="増井研の方々"&gt;増井研の方々&lt;/h3&gt;

&lt;p&gt;3年秋という中途半端なタイミングでミジンコみたいなコーディングレベルで入ったのにかわいがってくれて本当にありがとうございました&lt;/p&gt;

&lt;p&gt;自分の存在が無に思えるほど技術のある人達の多い研究室でしたが、その分多くの学びがありました&lt;/p&gt;

&lt;p&gt;飯を食うよりプログラミングな空気が最高に心地よかったです&lt;/p&gt;

&lt;p&gt;自分の技術力と、勉強に裂ける時間が少ない環境に甘んじて全然アウトプットができなかったのと増井先生からもっと学べばよかったという後悔はありますが、本当に楽しかったです&lt;/p&gt;

&lt;p&gt;合宿とか飲みとか、いろいろ予定かぶっていけなくてほんとつらいんで卒業して日にちあったら絶対行きますんで呼んでください(というよりSlackでキャッチアップします)&lt;/p&gt;

&lt;p&gt;頑張って綺麗なPHPerになってORFにでもお邪魔します&lt;/p&gt;

&lt;h3 id="cnsコンサルタントの人たち"&gt;CNSコンサルタントの人たち&lt;/h3&gt;

&lt;p&gt;一応これは「バイト先で〜」のところと被ってるんですが、&lt;/p&gt;

&lt;p&gt;CNSコンの人たちには、特にお世話になりました。&lt;/p&gt;

&lt;p&gt;すごくすごくたくさん働いて長い時間を過ごしていたり、今までやってたバイトで一番長い期間勤めてたこともあってとても思い入れが深いです。&lt;/p&gt;

&lt;p&gt;特にITCの方々&lt;/p&gt;

&lt;p&gt;その中でも浅見さん、関本さん、山方さん、寺岡さん、中島さんにはお世話になりました(他にもお世話になった方いっぱいなのですが名前を覚えてる方々だけ書きました)&lt;/p&gt;

&lt;p&gt;学生であまあまだった僕たちに本当に優しく、時に厳しく指導していただいて本当にありがとうございました&lt;/p&gt;

&lt;p&gt;大学内という性質もあると思うのですが、ここまで優しく厳しい職場は他になかったです&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;また、先輩や後輩、同期にもとてもとてもお世話になりました&lt;/p&gt;

&lt;p&gt;大学で友達が少ない僕と仲良くしてくれて本当にありがとうございます&lt;/p&gt;

&lt;p&gt;サークルの友達でさえ、遊びに行くとか飲みに行くとかは４年生になるまでほとんどなかったのですが&lt;/p&gt;

&lt;p&gt;CNSコンの人とは過ごしてた時間が長い気がします(勤務時間が長いからってのもあるけど)&lt;/p&gt;

&lt;p&gt;また、ここほど後輩と絡みがあった場所もあまりなかった気がします&lt;/p&gt;

&lt;p&gt;同期に関して言えば、まさかの７人が職場近いのでほんと毎週飲もうって勝手に思ってます&lt;/p&gt;

&lt;p&gt;これからも仲良くしてください！&lt;/p&gt;

&lt;h3 id="やぎはしゅ"&gt;やぎはしゅ&lt;/h3&gt;

&lt;p&gt;スーパーイケメンハッカーウルトラエンジニアになる予定の彼には本当に本当にお世話になりました。&lt;/p&gt;

&lt;p&gt;彼をわざわざ個人名にあげたのは理由があって、&lt;/p&gt;

&lt;p&gt;僕がエンジニアとしてやっていこうと思うまでの道のりのスタートは彼が提示してくれた道だからです&lt;/p&gt;

&lt;p&gt;&lt;s&gt;提示というより強制といったほうが合ってる気もしますが…&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;また、きっかけだけでなく彼がガンガン僕をその道に引きずり込んでなければ僕が川に沈む生ごみレベルの技術者からミジンコレベルの技術者へと華麗なる変貌を遂げることもなかったでしょう&lt;/p&gt;

&lt;p&gt;彼にイジメられた日々はこの先の人生の中でもとても大事なものになると思います&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;また、それだけでなく彼にはプライベートでもバイトでもたくさん助けて頂きました。&lt;/p&gt;

&lt;p&gt;一見、セキュリティキチガイであり煽り狂であったりとする彼ですが人間的に本当にできていて、たくさん助けて頂きました。ありがとう&lt;/p&gt;

&lt;p&gt;結局、彼が専門とするセキュリティではなくWebエンジニアとして生きていくことになりそうですが、これからも彼の知識と&lt;strong&gt;給料に&lt;/strong&gt;たかって生きていこうと思っています&lt;/p&gt;

&lt;p&gt;初任給飲みが楽しみです&lt;/p&gt;

&lt;h3 id="家族"&gt;家族&lt;/h3&gt;

&lt;p&gt;これに関しては大学生活でなく、この22年間ですね。&lt;/p&gt;

&lt;p&gt;正直、大学生になってからはほとんど会話をしてなくて、年に数回きちんと集まってご飯を食べるとき以外はあまり話せていないです&lt;/p&gt;

&lt;p&gt;次男とは就活やら大学やらで話をするのですが、毎日ってわけではないです&lt;/p&gt;

&lt;p&gt;それに、説明は省きますがいろいろごたごたしたり大変な時に家族に対して必要以上に苛立ちを感じたり言い争いになることも多かったような気もします&lt;/p&gt;

&lt;p&gt;それでも結局このタイミングにして思うのは、100％油断出来る相手は家族だけだろうしなんだかんだで22年間育ててもらって、&lt;/p&gt;

&lt;p&gt;ありがとうございます、というよりは巣立ちます、って感じの気持ちです&lt;/p&gt;

&lt;p&gt;きっと働いて仕事の大変さを感じたり、&lt;/p&gt;

&lt;p&gt;一人暮らしをいつかもし始めて家事をやってみたり、&lt;/p&gt;

&lt;p&gt;いつか家庭を持ったり、&lt;/p&gt;

&lt;p&gt;そんなときどきで家族への感謝を感じるでしょう&lt;/p&gt;

&lt;p&gt;ありがとうございました(一番お世話になった母はたぶんブログにたどりつけないですけどね)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>solve-cards-by-python3</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/03/19/solve-cards-by-python3.html"/>
    <id>http://sota1235.com/blog/2015/03/19/solve-cards-by-python3.html</id>
    <published>2015-03-19T18:49:00+09:00</published>
    <updated>2015-04-19T14:02:05+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;昼休みに休憩がてらやってみた。&lt;/p&gt;

&lt;p&gt;一応5分くらいでできた。&lt;/p&gt;

&lt;p&gt;Python楽しいです(^q^)&lt;/p&gt;

&lt;p&gt;&lt;a href="http://qiita.com/hisui@github/items/b47c411437d60440a605"&gt;Qiita:これが10分でできない人は自分がかなりプログラミングができないというつらい事実を認識しましょう。&lt;/a&gt;&lt;/p&gt;

&lt;script src="https://gist.github.com/sota1235/2ec1e37021ff8c10b17d.js"&gt;&lt;/script&gt;
</content>
  </entry>
  <entry>
    <title>Git開発でmasterの内容を開発ブランチに反映させる方法</title>
    <link rel="alternate" href="http://sota1235.com/blog/2015/03/19/git-rebase.html"/>
    <id>http://sota1235.com/blog/2015/03/19/git-rebase.html</id>
    <published>2015-03-19T13:53:00+09:00</published>
    <updated>2015-04-19T14:02:05+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Git開発を行っていると、こんなことありませんか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;origin/master&lt;/code&gt;ブランチから&lt;code&gt;hoge&lt;/code&gt;ブランチを切る&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;hoge&lt;/code&gt;の実装をゴリゴリ行ってる間に&lt;code&gt;origin/master&lt;/code&gt;ブランチがどんどん更新されていく&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自分が編集してたファイルが&lt;code&gt;master&lt;/code&gt;で更新されてた＼(^o^)／&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;origin/master&lt;/code&gt;を一回merge、コンフリクトを直してPull Requestを送る&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あるあるですよね。&lt;/p&gt;

&lt;p&gt;そしてrebaseを知らない頃の僕は以下の方法で解決していました。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% git checkout master

% git pull origin master

% git checkout hoge

% git merge master

(ここでコンフリクトが出て怒られる)
(bot modifiedステータスのファイルを修正、コミット)

% git push origin hoge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでやっとPull Requestを送ることができます&lt;/p&gt;

&lt;p&gt;下の図で言うと&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CからGへmergeコミット(この際、コンフリクトを解消)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GからFへmergeコミット(プルリクエスト)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;となります。&lt;/p&gt;

&lt;p&gt;&lt;img src="/blog/2015/03/19/git-rebase/rebase01.png" /&gt;&lt;/p&gt;

&lt;p&gt;しかしrebaseコマンドを使うことでこの2回のコミットを1回に減らすことができます&lt;/p&gt;

&lt;h1 id="rebaseコマンド"&gt;rebaseコマンド&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;rebase&lt;/code&gt;コマンドを使うことで、現在のブランチが生えているポイントをmasterの最新のコミットに変更することができます。&lt;/p&gt;

&lt;p&gt;図で言うならば下図の状態が&lt;/p&gt;

&lt;p&gt;&lt;img src="/blog/2015/03/19/git-rebase/rebase02.png" /&gt;&lt;/p&gt;

&lt;p&gt;こうなります。&lt;/p&gt;

&lt;p&gt;&lt;img src="/blog/2015/03/19/git-rebase/rebase03.png" /&gt;&lt;/p&gt;

&lt;p&gt;この際、コミットは1回も増えていません。&lt;/p&gt;

&lt;p&gt;ここからプルリクを出し、mergeされると下図のようになります。&lt;/p&gt;

&lt;p&gt;&lt;img src="/blog/2015/03/19/git-rebase/rebase04.png" /&gt;&lt;/p&gt;

&lt;p&gt;mergeコミットはこの1回で済み、履歴を綺麗に残すことができました！YATTA！&lt;/p&gt;

&lt;h1 id="使い方"&gt;使い方&lt;/h1&gt;

&lt;h3 id="1-ローカルのmasterを最新の状態にする"&gt;1 ローカルのmasterを最新の状態にする&lt;/h3&gt;

&lt;p&gt;まずはrebaseするmasterブランチを最新の状態にします。&lt;/p&gt;

&lt;p&gt;この際、ブランチがmasterに切り替わっていないと開発ブランチにmergeしようとしてしまうので注意してください。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
% git checkout master

% git pull origin master

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="2-rebaseコマンドを叩く"&gt;2 rebaseコマンドを叩く&lt;/h3&gt;

&lt;p&gt;開発ブランチに戻り、rebaseコマンドを叩きます。&lt;/p&gt;

&lt;p&gt;この際、コンフリクトが発生しなければ手順は終了です。&lt;code&gt;git log&lt;/code&gt;あたりで履歴を見て見てください！&lt;/p&gt;

&lt;p&gt;当然、コンフリクトが起こることもあるので、その場合を次で説明します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
% git checkout hoge

% git rebase master

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="3-コンフリクトを解消する"&gt;3 コンフリクトを解消する&lt;/h3&gt;

&lt;p&gt;コンフリクトが発生した場合は、ファイルを修正、&lt;code&gt;add&lt;/code&gt;して&lt;code&gt;rebase --continue&lt;/code&gt;します。これをコンフリクトが消えるまで繰り返します。&lt;/p&gt;

&lt;p&gt;ここで&lt;code&gt;commit&lt;/code&gt;してしまうとやり直しになってしまうので気をつけてください。&lt;/p&gt;

&lt;p&gt;rebaseを途中でやめて、rebase直前の状態に戻す場合は&lt;code&gt;git rebase --abort&lt;/code&gt;を叩けばオッケーです。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
% vi conflictFile1.txt

% git add conflictFile1.txt

% git rebase --continue

(ここでまたコンフリクトが出たら同じことを繰り返す)

※rebase直前の状態に戻す場合は

% git rebase --abort

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="注意点"&gt;注意点&lt;/h1&gt;

&lt;p&gt;もし、すでに開発ブランチをリモートにpushしている場合、rebaseを行った後にpushすると怒られてしまうので&lt;code&gt;force&lt;/code&gt;オプションをつけてください&lt;/p&gt;

&lt;p&gt;※ リモートの開発ブランチが変更される処理なので慎重に行ってください&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
% git push -f origin hoge

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="何が嬉しいか"&gt;何が嬉しいか&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;コミット2回が1回で済むので履歴が綺麗&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作業途中で一旦&lt;code&gt;master&lt;/code&gt;を反映したいとき、commitを増やすことなくmergeすることができる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="その他"&gt;その他&lt;/h1&gt;

&lt;p&gt;ここ間違ってるよーとか読みづれーよーとかあったらコメントなり編集なりしてくださいm(_ _)m&lt;/p&gt;

&lt;h1 id="参考"&gt;参考&lt;/h1&gt;

&lt;p&gt;&lt;a href="http://blog.seasons.cc/entry/20090329/1238351273"&gt;Seasons.NETgit rebaseって超便利じゃね？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://kik.xii.jp/archives/117"&gt;git rebasetips&lt;/a&gt;#&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>レスポンシブ対応しようとした時に困ったこと</title>
    <link rel="alternate" href="http://sota1235.com/blog/2014/12/02/responsive.html"/>
    <id>http://sota1235.com/blog/2014/12/02/responsive.html</id>
    <published>2014-12-02T15:15:00+09:00</published>
    <updated>2015-04-19T14:02:05+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;このsota1235.comは静的サイトジェネレータである&lt;a href="http://middlemanapp.com/jp/basics/blogging/"&gt;Middleman blog&lt;/a&gt;とCSSフレームワークである&lt;a href="http://purecss.io/"&gt;Pure&lt;/a&gt;を用いて作成されている。&lt;/p&gt;

&lt;p&gt;これは&lt;a href="http://camuro.org"&gt;camuro.org&lt;/a&gt;をリスペクトしての構成であるが、レスポンシブ対応を試みた時につまづいたのでメモする。&lt;/p&gt;

&lt;h3 id="media-queriesとviewport"&gt;Media Queriesとviewport&lt;/h3&gt;

&lt;p&gt;Pure CSSでは&lt;code&gt;divタグ&lt;/code&gt;にclassを付与することでレイアウトを作成することができる。&lt;/p&gt;

&lt;p&gt;生成されたページのCSSを見ると以下のようになっている。&lt;/p&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;48em&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pure-u-md-1-4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pure-u-md-6-24&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;min-width: 48em&lt;/code&gt;の部分で基準のサイズを決めており、このような記法をMedia Queriesという。&lt;/p&gt;

&lt;p&gt;また、これを反映させるためには&lt;code&gt;metaタグ&lt;/code&gt;でviewportを設定する必要がある。(ここでつまづいていた…)&lt;/p&gt;

&lt;p&gt;sota1235.comでは以下のように設定してある。&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;contentの内容は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;width=device-width&lt;/code&gt; &amp;hellip; 横幅をデバイスの幅として設定&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;initial-scale=1.0&lt;/code&gt; &amp;hellip; 倍率の初期設定&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;user-scalable=no&lt;/code&gt; &amp;hellip; ユーザがズームできるかの設定&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;minimum-scale=1.0&lt;/code&gt; &amp;hellip; 最小比率の設定&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;maximum-scale=1.0&lt;/code&gt; &amp;hellip; 最大比率の設定&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という感じ。&lt;/p&gt;

&lt;p&gt;これを設定してあげることでCSSがデバイスの画面幅を読み込み、そのサイズにあったスタイルシートをあててくれる。&lt;/p&gt;

&lt;p&gt;「とりあえずBootstrapダー！！」とか「Pureでレスポンシブなおしゃれブログ構築ヤー！！」なんて言う前に、こういう基礎の部分をしっかり抑えないとつまづくことが多いような気がします。&lt;/p&gt;

&lt;p&gt;お勉強になったしいい教訓でした。ちゃんちゃん&lt;/p&gt;

&lt;h3 id="参考"&gt;参考&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://barktoimagine.com/web/846"&gt;レスポンシブWebデザインはviewportとメディアクエリーからはじめろ！&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://coliss.com/articles/build-websites/operation/css/css3-media-queries.html"&gt;CSS3のMedia Queries（メディアクエリ）の使い方と実装例&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
